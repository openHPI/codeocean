- content_for :head do
  // Force a full page reload, see https://github.com/turbolinks/turbolinks/issues/326.
     Otherwise, code might not be highlighted correctly (race condition)
  meta name='turbolinks-visit-control' content='reload'
  - append_javascript_pack_tag('d3-tip')
h1 = @exercise

- statistic_base = policy_scope(Submission).where(exercise: @exercise).unscope(where: :cause)
- participants = statistic_base.group(:contributor_id, :contributor_type).count.size
- finishers_count = @exercise.finishers_count(statistic_base)
- average_score = @exercise.average_score(statistic_base)
- average_percentage = @exercise.average_percentage(statistic_base)

= row(label: '.participants', value: participants)

- %i[intermediate final].each do |scope|
  / i18n-tasks-use t('.intermediate_submissions') t('.final_submissions')
  = row(label: ".#{scope}_submissions") do
    /TODO: Refactor next line
    = "#{statistic_base.send(scope).count} (#{t('.users_and_programming_groups', count: Submission.from(statistic_base.send(scope).group(:contributor_id, :contributor_type).select(:contributor_id, :contributor_type)).count)})"

= row(label: '.finishing_rate') do
  p
    - if finishers_count
      = t('.users_and_programming_groups', count: "#{finishers_count} #{t('shared.out_of')} #{participants}")
    - else
      = empty
  - finishers_percentage = participants.zero? ? 0 : (100.0 / participants * finishers_count).round(2)
  p = progress_bar(finishers_percentage)

= row(label: '.average_score') do
  p
    - if average_score
      = average_score.round(2)
      =<> t('shared.out_of')
      = format('%.1f', @exercise.maximum_score)
    - else
      = empty
  p = progress_bar(average_percentage)

- if policy(@exercise).detailed_statistics?
  = row(label: '.average_worktime') do
    p = @exercise.average_working_time

.mt-3

- unless policy(@exercise).detailed_statistics?
  .lead
    .card.border-info-subtle.mb-3
      .card-header
        i.fa-solid.fa-circle-info.text-info
        strong.text-info
          => t('.final_submissions_only', count: contributor_statistics.values.sum(&:count))
        = t('.final_submissions_only_explanation')
- contributor_statistics.each_pair do |user_type, user_with_submission_stats|
  - if user_with_submission_stats.any?
    h5 = t(".#{user_type.model_name.collection}")
    - if user_type == ExternalUser
      - working_time_array = []
      - user_with_submission_stats.each_key do |contributor|
        - working_time = @exercise.average_working_time_for(contributor) || 0
        - working_time_array.push working_time
      hr
      .d-none#data data-working-time=ActiveSupport::JSON.encode(working_time_array)
      .working-time-graphs
      #chart_1
      hr
      #chart_2
      hr
    .table-responsive.mb-4
      table.table.table-striped class=(user_with_submission_stats.present? ? 'sortable' : '')
        thead
          tr
            th.header = t('.user')
            th.header = t('.score')
            th.header = t('.deadline')
            th.header = t('.runs') if policy(@exercise).detailed_statistics?
            th.header = t('.worktime') if policy(@exercise).detailed_statistics?
        tbody
          - user_with_submission_stats.each do |contributor, submission_stat|
            tr
              td = link_to_if user_type == ExternalUser && policy(contributor).statistics?, contributor ? contributor.displayname : 'Unknown User', (contributor ? statistics_external_user_exercise_path(contributor, @exercise) : '')
              td = submission_stat['maximum_score'] || '0.0'
              td.align-middle
                - if submission_stat.created_at.present?
                  - if submission_stat.before_deadline?
                    .deadline-result.positive-result
                  - elsif submission_stat.within_grace_period?
                    .deadline-result.unknown-result
                  - elsif submission_stat.after_late_deadline?
                    .deadline-result.negative-result
              td = submission_stat['runs'] if policy(@exercise).detailed_statistics?
              td = @exercise.average_working_time_for(contributor) || '00:00:00' if contributor && policy(@exercise).detailed_statistics?




.row
  #editor-column.col-md-10.col-md-offset-1
    h1 = @exercise

    span.badge.pull-right.score

    p.lead = render_markdown(@exercise.description)

    #alert.alert.alert-danger role='alert'
      h4 = t('.alert.title')
      p = t('.alert.text', application_name: application_name)

    #development-environment
      ul.nav.nav-justified.nav-tabs role='tablist'
        li.active
          a data-placement='top' data-toggle='tab' data-tooltip=true href='#workspace' role='tab' title=t('shared.tooltips.shortcut', shortcut: 'ALT + 1')
            i.fa.fa-code
            = t('.workspace')
        li
          a data-placement='top' data-toggle='tab' data-tooltip=true href='#outputInformation' role='tab' title=t('shared.tooltips.shortcut', shortcut: 'ALT + 2')
            i.fa.fa-terminal
            = t('.output')
        li
          a data-placement='top' data-toggle='tab' data-tooltip=true href='#progress' role='tab' title=t('shared.tooltips.shortcut', shortcut: 'ALT + 3')
            i.fa.fa-line-chart
            = t('.progress')

      hr

      .tab-content
        #workspace.tab-pane.active = render('editor', exercise: @exercise, files: @files, submission: @submission)
        #outputInformation.tab-pane data-message-no-output=t('.no_output')
          #hint
            .panel.panel-warning
              .panel-heading = t('.hint')
              .panel-body
          .row
            / #output-col1.col-sm-12
            #output-col1
              // todo set to full width if turtle isnt used
              #prompt.input-group.hidden
                span.input-group-addon data-prompt=t('exercises.editor.input') = t('exercises.editor.input')
                input#prompt-input.form-control type='text'
                span.input-group-btn
                  button#prompt-submit.btn.btn-primary type="button" = t('exercises.editor.send')
              #output
                pre = t('.no_output_yet')
              - if CodeOcean::Config.new(:code_ocean).read[:flowr][:enabled]
                #flowrHint.panel.panel-info data-url=CodeOcean::Config.new(:code_ocean).read[:flowr][:url] role='tab'
                  .panel-heading = 'Gain more insights here'
                  .panel-body
            #output-col2.col-lg-5.col-md-5
              #turtlediv
                // todo what should the canvas default size be?
                canvas#turtlecanvas.hidden width=400 height=400 style='border-style:solid;border-width:thin'
        #progress.tab-pane
          #results
            h2 = t('.results')
            p.test-count == t('.test_count', count: 0)
            ul.list-unstyled
            ul#dummies.hidden.list-unstyled
              li.panel.panel-default
                .panel-heading
                  h3.panel-title == t('.file', filename: '', number: 0)
                .panel-body
                  = row(label: '.passed_tests', value: t('shared.out_of', maximum_value: 0, value: 0).html_safe)
                  = row(label: 'activerecord.attributes.submission.score', value: t('shared.out_of', maximum_value: 0, value: 0).html_safe)
                  = row(label: '.feedback')
                  = row(label: '.error_messages')
                  = row(label: '.output', value: link_to(t('shared.show'), '#'))
          #score data-maximum-score=@exercise.maximum_score data-score=@submission.try(:score)
            h4
              span == "#{t('activerecord.attributes.submission.score')}:&nbsp;"
              span.score
            .progress
              .progress-bar role='progressbar'

          //#editor.row data-message-depleted=t('exercises.editor.depleted') data-message-timeout=t('exercises.editor.timeout', permitted_execution_time: @exercise.execution_environment.permitted_execution_time)
          br
          - if session[:lti_parameters].try(:has_key?, 'lis_outcome_service_url')
            p.text-center = render('editor_button', classes: 'btn-lg btn-success', data: {:'data-url' => submit_exercise_path(@exercise)}, icon: 'fa fa-send', id: 'submit', label: t('exercises.editor.submit'))
          - else
            p.text-center = render('editor_button', classes: 'btn-lg btn-warning-outline', data: {:'data-message-confirm' => t('exercises.editor.time_over'), :'data-placement' => 'bottom', :'data-tooltip' => true} , icon: 'fa fa-ban', id: 'submit_outdated', label: t('exercises.editor.time_over'), title: t('shared.tooltips.time_over'))

//data: {:'data-message-depleted' => t('exercises.editor.depleted')}

            // = render('editor_button', data: {:'data-message-success' => t('submissions.create.success'), :'data-placement' => 'top', :'data-tooltip' => true}, icon: 'fa fa-save', id: 'save', label: t('exercises.editor.save'), title: t('.tooltips.save'))
//        = render('editor_button', data: {:'data-message-failure' => t('exercises.editor.run_failure'), :'data-message-network' => t('exercises.editor.network'), :'data-message-success' => t('exercises.editor.run_success'), :'data-placement' => 'top', :'data-tooltip' => true}, icon: 'fa fa-play', id: 'run', label: t('exercises.editor.run'), title: t('shared.tooltips.shortcut', shortcut: 'ALT + r'))

                        //title: t('.tooltips.save')
                        // data-message-depleted=t('exercises.editor.depleted')

                        //  = render('editor_button', data: {:'data-placement' => 'top', :'data-tooltip' => true}, icon: 'fa fa-stop', id: 'stop', label: t('exercises.editor.stop'), title: t('shared.tooltips.shortcut', shortcut: 'ALT + r'))

                        // title: t('.tooltips.save'))
                        //  = render('editor_button', icon: 'fa fa-desktop', id: 'render', label: t('exercises.editor.render'))

                        //label: t('exercises.editor.start_over'))
                        // = render('editor_button', data: {:'data-message-success' => t('submissions.create.success'), :'data-placement' => 'top', :'data-tooltip' => true}, icon: 'fa fa-save', id: 'save', label: t('exercises.editor.save'), title: t('.tooltips.save'))

                        //  = render('editor_button', disabled: true, icon: 'fa fa-ban', id: 'dummy', label: t('exercises.editor.dummy'))

  - if qa_url
    #questions-column
      #questions-holder data-url="#{qa_url}/qa/index/#{@exercise.id}/#{@user_id}"
    = qa_js_tag

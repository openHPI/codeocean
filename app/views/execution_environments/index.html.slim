h1.d-inline-block = ExecutionEnvironment.model_name.human(count: :other)

- if Runner.management_active? && policy(ExecutionEnvironment).sync_all_to_runner_management?
  = button_to({action: :sync_all_to_runner_management}, {form_class: 'float-end mb-2', class: 'btn btn-success'})
    i.fa-solid.fa-upload
    = t('execution_environments.index.synchronize_all.button')

.table-responsive.w-100
  table.table
    thead
      tr
        th = ExecutionEnvironment.human_attribute_name('name')
        th = ExecutionEnvironment.human_attribute_name('user')
        th = ExecutionEnvironment.human_attribute_name('pool_size')
        th = ExecutionEnvironment.human_attribute_name('memory_limit')
        th = ExecutionEnvironment.human_attribute_name('cpu_limit')
        th = ExecutionEnvironment.human_attribute_name('network_enabled')
        th = ExecutionEnvironment.human_attribute_name('privileged_execution')
        th = ExecutionEnvironment.human_attribute_name('permitted_execution_time')
        th colspan=5 = t('shared.actions')
    tbody
      - @execution_environments.each do |execution_environment|
        tr
          td = link_to_if(policy(execution_environment).show?, execution_environment.name, execution_environment)
          td = link_to_if(policy(execution_environment.author).show?, execution_environment.author, execution_environment.author)
          td = execution_environment.pool_size
          td = execution_environment.memory_limit
          td = execution_environment.cpu_limit
          td = symbol_for(execution_environment.network_enabled)
          td = symbol_for(execution_environment.privileged_execution)
          td = execution_environment.permitted_execution_time
          td = link_to(t('shared.show'), execution_environment) if policy(execution_environment).show?
          td = link_to(t('shared.edit'), edit_execution_environment_path(execution_environment)) if policy(execution_environment).edit?
          td = link_to(t('shared.destroy'), execution_environment, data: {confirm: t('shared.confirm_destroy')}, method: :delete) if policy(execution_environment).destroy?
          td = link_to(t('.shell'), shell_execution_environment_path(execution_environment)) if policy(execution_environment).shell?
          td = link_to(t('shared.statistics'), statistics_execution_environment_path(execution_environment)) if policy(execution_environment).statistics?

= render('shared/pagination', collection: @execution_environments)
p = render('shared/new_button', model: ExecutionEnvironment)

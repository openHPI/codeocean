h1 = ProxyExercise.model_name.human(count: 2)

= render(layout: 'shared/form_filters') do |f|
  .col-auto
    = f.label(:title_cont, t('activerecord.attributes.proxy_exercise.title'), class: 'visually-hidden form-label')
    = f.search_field(:title_cont, class: 'form-control', placeholder: t('activerecord.attributes.proxy_exercise.title'))

.table-responsive
  table.table.mt-4
    thead
      tr
        th.p-1 = sort_link(@search, :title, t('activerecord.attributes.proxy_exercise.title'))
        th.p-1 = t('activerecord.attributes.exercise.token')
        th.p-1 = t('activerecord.attributes.exercise.public')
        th.p-1 = t('activerecord.attributes.proxy_exercise.files_count')
        th.p-1 colspan=2 = t('shared.actions')
    tbody
      - @proxy_exercises.each do |proxy_exercise|
        tr data-id=proxy_exercise.id
          td.p-1.pt-2 = link_to_if(policy(proxy_exercise).show?, proxy_exercise.title, proxy_exercise)
          td.p-1.pt-2
            code
              = proxy_exercise.token
          td.p-1.pt-2.public data-value=proxy_exercise.public? = symbol_for(proxy_exercise.public?)
          td.p-1.pt-2 = proxy_exercise.count_files
          td.p-1.pt-2 = link_to(t('shared.edit'), edit_proxy_exercise_path(proxy_exercise)) if policy(proxy_exercise).edit?

          td.p-1
            .btn-group
              button.btn.btn-outline-primary.btn-sm.dropdown-toggle data-bs-toggle='dropdown' type='button' = t('shared.actions_button')
              span.caret
              span.visually-hidden Toggle Dropdown
              ul.dropdown-menu.float-end role='menu'
                li = link_to(t('shared.show'), proxy_exercise, 'data-turbolinks': 'false', class: 'dropdown-item') if policy(proxy_exercise).show?
                li = link_to(t('shared.destroy'), proxy_exercise, data: {confirm: t('shared.confirm_destroy')}, method: :delete, class: 'dropdown-item') if policy(proxy_exercise).destroy?
                li = link_to(t('.clone'), clone_proxy_exercise_path(proxy_exercise), data: {confirm: t('shared.confirm_destroy')}, method: :post, class: 'dropdown-item') if policy(proxy_exercise).clone?

= render('shared/pagination', collection: @proxy_exercises)
p = render('shared/new_button', model: ProxyExercise)

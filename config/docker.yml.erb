#Why erb?
default: &default
  connection_timeout: 3
  pool:
    active: false
  ports: !ruby/range 4500..4600

development:
  <<: *default
  host: tcp://192.168.59.104:2376
  ws_host: ws://192.168.59.104:2376 #url to connect rails server to docker host
  ws_client_protocol: ws:// #set the websocket protocol to be used by the client to connect to the rails server (ws on development, wss on production)
  workspace_root: <%= Rails.root.join('tmp', 'files', Rails.env) %>
  pool:
    active: true
    refill:
      async: false
      batch_size: 8
      interval: 15
      timeout: 60
  #workspace_root: <%= File.join('/', 'shared', Rails.env) %>

production:
  <<: *default
  host: unix:///var/run/docker.sock
  pool:
    active: true
    refill:
      async: false
      batch_size: 8
      interval: 15
      timeout: 60
  workspace_root: <%= Rails.root.join('tmp', 'files', Rails.env) %>
  ws_host: ws://localhost:4243 #url to connect rails server to docker host
  ws_client_protocol: wss:// #set the websocket protocol to be used by the client to connect to the rails server (ws on development, wss on production)

staging:
  <<: *default
  host: unix:///var/run/docker.sock
  pool:
    active: true
    refill:
      async: false
      batch_size: 8
      interval: 15
      timeout: 60
  workspace_root: <%= Rails.root.join('tmp', 'files', Rails.env) %>
  ws_host: ws://localhost:4243 #url to connect rails server to docker host
  ws_client_protocol: wss:// #set the websocket protocol to be used by the client to connect to the rails server (ws on development, wss on production)

test:
  <<: *default
  host: tcp://192.168.59.104:2376
  workspace_root: <%= File.join('/', 'shared', Rails.env) %>
  #probably need to add some additional configuration here
